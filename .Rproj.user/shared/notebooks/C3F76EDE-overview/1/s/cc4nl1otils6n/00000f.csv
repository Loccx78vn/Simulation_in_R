"0","#| include: false"
"0","#| message: false"
"0","#| warning: false"
"0","#| label: load packages"
"0","# Data ----------------------------------------------------------------------"
"0","set.seed(123) "
"0",""
"0","## Enterprise data:"
"0","regions <- c(""ASIA"", ""AFRICA"", ""EUROPE"", ""NORTHAMERICA"", ""SOUTHAMERICA"")"
"0","num_entries <- 30  # Number of entries to generate"
"0",""
"0","generate_code <- function(prefix, num) {"
"0","  sprintf(""%s-%03d"", prefix, num)"
"0","}"
"0",""
"0","enterprise_data <- data.frame("
"0","  region = sample(regions, num_entries, replace = TRUE),"
"0","  mf_code = sapply(ceiling(sample(1:20, num_entries, replace = TRUE)), function(x) generate_code(""MF"", x)),"
"0","  wh_code = sapply(ceiling(sample(1:20, num_entries, replace = TRUE)), function(x) generate_code(""WH"", x)),"
"0","  dc_code = sapply(ceiling(sample(1:20, num_entries, replace = TRUE)), function(x) generate_code(""DC"", x)),"
"0","  product_code = sapply(ceiling(sample(1:20, num_entries, replace = TRUE)), function(x) generate_code(""PRO"", x))"
"0",")"
"0",""
"0","enterprise_data$SKU <- paste0("
"0","  substr(enterprise_data$region, 1, 3), "
"0","  ""-"", gsub(""-"", """", enterprise_data$mf_code),"
"0","  ""-"", gsub(""-"", """", enterprise_data$dc_code),"
"0","  ""-"", gsub(""-"", """", enterprise_data$wh_code),"
"0","  ""-"", gsub(""-"", """", enterprise_data$product_code)"
"0",")"
"0",""
"0","## Locations data:"
"0",""
"0","region_bounds <- data.frame("
"0","  region = c(""ASIA"", ""AFRICA"", ""EUROPE"", ""NORTHAMERICA"", ""SOUTHAMERICA""),"
"0","  lat_min = c(1, -35, 35, 24, -56),"
"0","  lat_max = c(81, 37, 72, 50, 12),"
"0","  long_min = c(60, -25, -30, -170, -75),"
"0","  long_max = c(180, 60, 50, -50, -35)"
"0",")"
"0",""
"0","generate_coordinates <- function(region) {"
"0","  bounds <- region_bounds %>% filter(region == !!region)"
"0","  latitude <- runif(1, bounds$lat_min, bounds$lat_max)"
"0","  longitude <- runif(1, bounds$long_min, bounds$long_max)"
"0","  return(c(latitude, longitude))"
"0","}"
"0",""
"0","location_data <- enterprise_data %>%"
"0","  pivot_longer("
"0","    cols = c(mf_code, wh_code, dc_code),"
"0","    names_to = ""facility_type"","
"0","    values_to = ""facilities"""
"0","  ) %>%"
"0","  select(region, facilities)"
"0",""
"0","coordinates <- t(sapply(location_data$region, generate_coordinates))"
"0","colnames(coordinates) <- c(""latitude"", ""longitude"")"
"0",""
"0","location_data<- as.data.frame(cbind(location_data,coordinates))"
"0",""
"0","## Sale data:"
"0","num_days <- 90"
"0","start_date <- Sys.Date() - num_days"
"0","date_seq <- seq.Date(from = start_date, by = ""day"", length.out = num_days)"
"0",""
"0","sales_data <- data.frame()"
"0",""
"0","for (SKU in unique(enterprise_data$SKU)) {"
"0","  "
"0","  daily_sales <- sample(1:100, num_days, replace = TRUE)"
"0","  selling_price <- round(runif(num_days, 10, 100), 2)"
"0","  net_income <- selling_price*20/100"
"0","  "
"0","  temp_data <- data.frame("
"0","    date = date_seq,"
"0","    SKU = SKU,"
"0","    daily_sales = daily_sales,"
"0","    selling_price = selling_price,"
"0","    net_income = net_income"
"0","  )"
"0","  "
"0","  sales_data <- rbind(sales_data, temp_data)"
"0","}"
"0",""
"0","## Procurement data:"
"0","set.seed(123)"
"0",""
"0","suppliers <- c(""Vinamilk"", ""Vingroup"", ""FPT"", ""Masan Group"", ""TH True Milk"", ""Hoa Phat Group"", ""BIDV"", ""MobiFone"", ""Sacombank"", ""PetroVietnam"")"
"0",""
"0","generate_random_product <- function() {"
"0","  product_names <- c(""Grocery Item"", ""Beverage"", ""Dairy Product"", ""Snack"", ""Frozen Food"", ""Household Item"", ""Cosmetic"", ""Health Supplement"", ""Electronics"", ""Stationery"")"
"0","  features <- c(""Organic"", ""Gluten-Free"", ""Low Sugar"", ""High Protein"", ""Non-GMO"", ""Vegan"", ""Locally Sourced"", ""Eco-Friendly"", ""Premium Quality"", ""Imported"")"
"0","  "
"0","  product_name <- sample(product_names, 1)"
"0","  feature <- sample(features, 1)"
"0","  "
"0","  return(list(product_name = product_name, feature = feature))"
"0","}"
"0",""
"0","procurement_data <- data.frame()"
"0",""
"0","for (SKU in unique(enterprise_data$SKU)) {"
"0","  supplier <- sample(suppliers, 1)"
"0","  random_product <- generate_random_product()"
"0","  "
"0","  expiry_date <- Sys.Date() + sample(30:180, 1)"
"0","  "
"0","  temp_data <- data.frame("
"0","    SKU = SKU,"
"0","    supplier = supplier,"
"0","    product_name = random_product$product_name,"
"0","    feature = random_product$feature,"
"0","    expiry_date = expiry_date"
"0","  )"
"0","  "
"0","  procurement_data <- rbind(procurement_data, temp_data)"
"0","}"
"0",""
"0","## Historical data:"
"0","historical_data <- data.frame("
"0","  region = rep(c(""EUROPE"", ""AFRICA"", ""SOUTHAMERICA"", ""NORTHAMERICA"", ""ASIA""), each = 6),"
"0","  month = rep(as.Date(paste(2024, 1:6, 1, sep = ""-"")), times = 5),"
"0","  total_sales = sample(800:15000, 30, replace = TRUE)"
"0",") "
"0",""
"0","historical_data <- rbind(historical_data, "
"0","                         data.frame(region = ""All"", "
"0","                                    month = rep(unique(historical_data$month), each = 1), "
"0","                                    total_sales = tapply(historical_data$total_sales, historical_data$month, sum)))"
"0","convert_region <- function(abbrev) {"
"0","  full_names <- c(""AFR"" = ""AFRICA"", ""ASI"" = ""ASIA"", ""EUR"" = ""EUROPE"", "
"0","                  ""NOR"" = ""NORTHAMERICA"", ""SOU"" = ""SOUTHAMERICA"", ""All"" = ""All Regions"")"
"0","  return(full_names[abbrev])"
"0","}"
"0",""
"0","# Create summary_sales"
"0","summary_sales <- sales_data |> "
"0","  mutate(region = substr(SKU, 1, 3)) |> "
"0","  group_by(region, month = month(date)) |> "
"0","  summarise(total_sales = sum(daily_sales), .groups = 'drop') |> "
"0","  mutate(month = as.Date(paste(2024, month, 1, sep = ""-"")),"
"0","         region = convert_region(region))"
"0",""
"0","summary_sales <- rbind(summary_sales, "
"0","                       data.frame(region = ""All"", "
"0","                                  month = rep(unique(summary_sales$month), each = 1), "
"0","                                  total_sales = tapply(summary_sales$total_sales, summary_sales$month, sum)))"
"0",""
"0",""
"0","forecasts <- lapply(unique(historical_data$region), function(region) {"
"0","  region_data <- historical_data[historical_data$region == region, ]"
"0","  ts_data <- ts(region_data$total_sales, frequency = 1)  "
"0","  forecasted_values <- forecast(auto.arima(ts_data), h = 4)"
"0","  data.frame("
"0","    region = region,"
"0","    month = as.Date(paste(2024, 7:10, 1, sep = ""-"")),"
"0","    Mean = forecasted_values$mean,"
"0","    High.95 = forecasted_values$upper[,2],"
"0","    Low.95 = forecasted_values$lower[,2]"
"0","  )"
"0","})"
"0",""
"0","compare <- bind_rows(forecasts) |> "
"0","  inner_join(summary_sales, by = c(""region"", ""month"")) |> "
"0","  rename(Obsereved = total_sales)"
"0",""
"0","## Data for cards: mutate(observed = summary_sales$total_sales,"
"0","card <- sales_data |> "
"0","  summarise("
"0","    revenue = sum(selling_price, na.rm = TRUE),"
"0","    total_sales = ceiling(sum(daily_sales, na.rm = TRUE)),"
"0","    net_income = sum(net_income, na.rm = TRUE)"
"0","  )"
"0",""
"0","## Map:"
"0","map<- sales_data |>"
"0","  left_join(enterprise_data, by = ""SKU"") |>"
"0","  group_by(region,"
"0","           wh_code,"
"0","           month = month(date)) |>"
"0","  summarise(total_sales = sum(daily_sales)) |> "
"0","  ungroup() |> "
"0","  left_join(location_data,"
"0","            by = c(""region"", "
"0","                   ""wh_code"" = ""facilities"")) |>"
"0","  select(c(longitude,"
"0","           latitude,"
"0","           total_sales,"
"0","           month,"
"0","           region,"
"0","           wh_code))"
"0",""
